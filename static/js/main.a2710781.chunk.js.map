{"version":3,"sources":["serviceWorker.js","static/space.js","components/Title.jsx","static/color.js","static/bodyParts.js","static/names.js","useRandomPop.js","components/NameMode.jsx","static/questions.js","components/QuestionMode.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","space","propTypes","classNmae","PropTypes","string","content","Title","styled","props","className","Typography","align","variant","defaultProps","useRandomPop","list","useState","currentList","setCurrentList","index","setIndex","isInit","reset","useCallback","useEffect","length","item","pop","filter","idx","max","newIndex","Math","floor","random","UnStyledNameMode","title","names","name","popName","bodyParts","bodyPart","popBodyPart","Container","maxWidth","Button","onClick","color","gutterBottom","NameMode","UnStyledQuestionMode","questions","question","QuestionMode","StyledBottomNavigation","BottomNavigation","div","modeMap","NAME","component","QUESTION","MODE","App","mode","setMode","ModeComponent","value","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a2710781.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const space = {\n  xxs: '2px',\n  xs: '4px',\n  s: '8px',\n  m: '16px',\n  l: '24px',\n  xl: '32px',\n  xxl: '40px'\n}","import { PrimaryDark, PrimaryLight } from \"../static/color\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { space } from \"../static/space\";\nimport styled from \"styled-components\";\n\nconst propTypes = {\n  classNmae: PropTypes.string,\n  content: PropTypes.string,\n};\n\nconst defaultProps = {\n  className: \"\",\n  content: \"\"\n};\n\nconst UnTitle = (props) => (\n  <div className={props.className}>\n    <Typography className=\"content\" align=\"center\" variant=\"h1\">\n      {props.content}\n    </Typography>\n  </div>\n);\n\nconst Title = styled(UnTitle)`\n  width: 100%;\n  padding: ${space.m} 0;\n  margin-top: ${space.xl};\n  background-color: ${PrimaryDark};\n\n  .content {\n    color: ${PrimaryLight};\n    font-style: italic;\n    font-weight: 400;\n  }\n`;\n\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","export const Primary = '#f5e2ea'\nexport const PrimaryDark = '#e5737e'\nexport const PrimaryLight = '#FAF0F4'","export default ['眼睛', '鼻子', '嘴巴', '耳朵', '頭髮', '手']","export default [\n  \"梁祐誠\",\n  \"曾邁萱\",\n  \"葛郁文\",\n  \"葛郁芳\",\n  \"賴謙如\",\n  \"梁祐銘\",\n  \"蔡韋雯\",\n  \"潘嘉文\",\n  \"陸茹敏\",\n  \"沈志傑\",\n  \"李以翔\",\n  \"余博煜\",\n  \"林恩美\",\n  \"林恩柔\",\n  \"謝玟芯\",\n  \"謝兆元\",\n  \"邱偉興\",\n  \"與恩\",\n  \"宋偉鈴\",\n  \"宋千汝\",\n  \"宋靜宜\",\n  \"簡愷頤\",\n  \"周宗凡\",\n  \"健明\",\n  \"周宗聖\",\n  \"潘玉官\",\n  \"林濬儀\",\n  \"沈福達\",\n  \"蕭詩儀\",\n  \"許志華\",\n  \"李宛恬\",\n]","import { useCallback, useEffect, useState } from \"react\"\n\nconst getRandomNum = max => Math.floor(Math.random() * max)\n\nconst useRandomPop = list => {\n  const [currentList, setCurrentList] = useState(list)\n  const [index, setIndex] = useState(null)\n\n  const isInit = index === null\n\n  const pop = () => {\n    if (!isInit) {\n      setCurrentList(list => list.filter((item, idx) => idx !== index))\n    }\n\n    const newIndex = getRandomNum(currentList.length - 1)\n    setIndex(newIndex)\n  }\n\n  const reset = useCallback(() => setCurrentList(list), [list])\n\n  useEffect(() => {\n    if (currentList.length < 1) {\n      reset()\n    }\n  }, [currentList, reset])\n\n  return { isInit, item: isInit ? null : currentList[index], currentList, pop, reset }\n}\n\nexport default useRandomPop","import { Button, Container, Typography } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Title from \"./Title\";\nimport bodyParts from \"../static/bodyParts\";\nimport names from \"../static/names\";\nimport { space } from \"../static/space\";\nimport styled from \"styled-components\";\nimport useRandomPop from \"../useRandomPop\";\n\nconst propTypes = {\n  classNmae: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n  className: \"\",\n};\n\nconst UnStyledNameMode = (props) => {\n  const { className, title } = props;\n  const { isInit, item: name, pop: popName } = useRandomPop(names);\n  const { item: bodyPart, pop: popBodyPart } = useRandomPop(bodyParts);\n\n  return (\n    <div className={className}>\n      <Title content={title} />\n      <Container className=\"container\" maxWidth=\"md\">\n        {isInit ? (\n          <Button variant=\"outlined\" onClick={() => popName()}>\n            開始\n          </Button>\n        ) : (\n          <>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => popName()}\n            >\n              下一位\n            </Button>\n            <Typography gutterBottom>挑戰者</Typography>\n            <Typography variant=\"h3\">{name}</Typography>\n          </>\n        )}\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => popBodyPart()}>\n          抽部位\n        </Button>\n        <Typography variant=\"h3\">{bodyPart}</Typography>\n      </Container>\n    </div>\n  );\n};\n\nUnStyledNameMode.propTypes = propTypes;\nUnStyledNameMode.defaultProps = defaultProps;\n\nconst NameMode = styled(UnStyledNameMode)`\n  display: flex;\n  align-items: center;\n  flex-flow: column nowrap;\n\n  .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-flow: column nowrap;\n\n    > button {\n      margin: ${space.xxl} 0;\n    }\n  }\n`;\n\nexport default NameMode;\n","export default [\n  \"媽媽最喜歡吃的水果？\",\n  \"媽媽喜歡什麼顏色？\",\n  \"媽媽最喜歡的飲料？\",\n  \"媽媽的鞋號？\",\n  \"媽媽最喜歡吃的一道菜？\",\n  \"媽媽喜歡的一首歌？\",\n  \"媽媽最想念的一個人？\",\n  \"媽媽是念的口頭纏？\",\n  \"媽媽最不喜歡孩子做的一件事？\",\n  \"為媽媽做過最感動的事，是什麼事？\",\n  \"媽媽幾年出生的？屬什麼？\",\n  \"媽媽最常做什麼動作？\",\n  \"媽媽最愛我哪裡？\",\n  \"媽媽是第幾代基督徒？\",\n  \"媽媽有幾個兄弟姐妹？\",\n  \"媽媽幾歲生你的？\",\n  \"媽媽的職業是？\",\n  \"媽媽的身高多少？\",\n  \"媽媽是單眼皮還是雙眼皮？\",\n  \"媽媽的媽媽在家裡排行第幾位？\",\n  \"你都怎麼叫你媽媽？\",\n  \"媽媽在家裡都怎麼叫你？\",\n  \"媽媽的專長是？\",\n  \"媽媽的興趣是？\",\n  \"媽媽的拿手菜是？\",\n  \"媽媽最喜歡唱的歌？\",\n  \"媽媽喜歡喝的飲料？\",\n  \"媽媽什麼星座？\",\n  \"媽媽以前留過長髮到哪裡？\",\n  \"媽媽的血型？？\",\n  \"媽媽的衣服的尺寸？\",\n  \"媽媽是幾年結婚的？\",\n  \"媽媽有戴耳環嘛？\",\n  \"媽媽最喜歡的指甲油顏色是？\",\n  \"媽媽有染過頭髮嘛？什麼顏色？\",\n  \"第一次戀愛幾歲？\",\n  \"結婚時幾歲？\",\n  \"做什麼事能讓媽媽開心？\",\n  \"爸爸媽媽怎麼認識的？\",\n  \"曾經看什麼節目哭嗎？\",\n  \"媽媽最碎唸的是什麼？\",\n  \"如果用一朵花形容媽媽，你的媽媽最像什麼花？\",\n  \"媽媽有沒有最喜歡的一句聖經的話？\",\n  \"講一個媽媽跟爸爸以前的約會地點\",\n  \"媽媽做在你身上一件最感動的事？\",\n  \"爸爸都叫媽媽什麼？名字或綽號？\",\n  \"媽媽的名字有沒有意思？是什麼意義呢？\",\n  \"媽媽鞋子有幾雙？大約數也可。\",\n  \"媽媽的裙子多還是褲子多？\",\n  \"媽媽敢不敢捉老鼠打蟑螂？\",\n  \"媽媽最近在追哪一齣劇？\",\n  \"媽媽有補充維他命的習慣嗎？\",\n]","import { Button, Container, Typography } from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Title from \"./Title\";\nimport questions from \"../static/questions\";\nimport { space } from \"../static/space\";\nimport styled from \"styled-components\";\nimport useRandomPop from \"../useRandomPop\";\n\nconst propTypes = {\n  classNmae: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\n\nconst defaultProps = {\n  className: \"\",\n};\n\nconst UnStyledQuestionMode = (props) => {\n  const { className, title } = props;\n  const { isInit, item: question, pop } = useRandomPop(questions);\n\n  return (\n    <div className={className}>\n      <Title content={title} />\n      <Container className=\"container\" maxWidth=\"md\">\n        {isInit ? (\n          <Button variant=\"outlined\" onClick={() => pop()}>\n            開始\n          </Button>\n        ) : (\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => pop()}>\n            下一題\n          </Button>\n        )}\n        {question && <Typography variant=\"h5\">{question}</Typography>}\n      </Container>\n    </div>\n  );\n};\n\nUnStyledQuestionMode.propTypes = propTypes;\nUnStyledQuestionMode.defaultProps = defaultProps;\n\nconst QuestionMode = styled(UnStyledQuestionMode)`\n  display: flex;\n  align-items: center;\n  flex-flow: column nowrap;\n\n  .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-flow: column nowrap;\n\n    > button {\n      margin: ${space.xxl} 0;\n    }\n  }\n`;\n\nexport default styled(QuestionMode)``;\n","import { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport NameMode from './components/NameMode';\nimport { Primary } from './static/color';\nimport QuestionMode from './components/QuestionMode';\nimport RestoreIcon from '@material-ui/icons/Favorite';\nimport styled from 'styled-components';\n\nconst StyledBottomNavigation = styled(BottomNavigation)`\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n`\n\nconst Container = styled.div`\n  height: 100vh;\n  background-color: ${Primary};\n`\n\nconst modeMap = {\n  NAME: {\n    component: NameMode,\n    title: '我的媽媽最美麗'\n  },\n  QUESTION: {\n    component: QuestionMode,\n    title: '快問快答'\n  }\n}\n\nconst MODE = {\n  NAME: 'NAME',\n  QUESTION: 'QUESTION'\n}\n\nfunction App() {\n  const [mode, setMode] = useState(MODE.NAME)\n  const ModeComponent = modeMap[mode].component\n\n  return (\n    <Container>\n      <ModeComponent title={modeMap[mode].title} />\n\n      <StyledBottomNavigation\n        value={mode}\n        onChange={(event, newValue) => setMode(newValue)}\n        showLabels\n      >\n        <BottomNavigationAction value={MODE.NAME} label={modeMap.NAME.title} icon={<RestoreIcon />} />\n        <BottomNavigationAction value={MODE.QUESTION} label={modeMap.QUESTION.title} icon={<LocationOnIcon />} />\n      </StyledBottomNavigation>\n    </Container>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}